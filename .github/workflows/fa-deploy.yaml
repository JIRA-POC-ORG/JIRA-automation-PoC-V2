name: 'Function App - Deploy'

on:
  workflow_call:
    inputs:
      gha_env:
        required: true
        type: string

      azure_env:
        required: true
        type: string

    secrets:
      azure_credentials:
        required: true

env:
  PROJECT_NAME: jira-automation-poc
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './src'
  DOTNET_VERSION: '6.x'

jobs:
  deploy_infra:
    name: Deploy Function App
    runs-on: ubuntu-latest
    environment: ${{ inputs.gha_env }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v1

      - name: Azure Login
        uses: azure/login@v1.1
        with:
          creds: ${{ secrets.azure_credentials }}

      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Run dotnet
        shell: pwsh
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet build --configuration Release --output ./output
          popd

      - name: Run Azure Functions Action
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: fa-${{ inputs.azure_env }}-${{ env.PROJECT_NAME }}
          package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
          
    build:
        runs-on: ubuntu-latest
        name: Jira Example
        steps:
            - name: Login
              uses: atlassian/gajira-login@master
              env:
                JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
                JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
                JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}

            - name: Create
              id: create
              uses: atlassian/gajira-create@master
              with:
                project: GA
                issuetype: Build
                summary: |
                  Build completed for ${{ github.repository }}
                description: |
                  Compare branch
                fields: '{"customfield_10171": "test"}'

            - name: Log created issue
              run: echo "Issue ${{ steps.create.outputs.issue }} was created"
